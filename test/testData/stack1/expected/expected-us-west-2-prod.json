{
  "Conditions": {
    "CDKMetadataAvailable": true,
    "False": false,
    "IsNotUSEAST1": true,
    "IsNotProdUsEast1": true,
    "IsNotProdUsEast1AndNotUsWest2": false,
    "IsNotUSWEST2": false,
    "IsRegionUSEAST1": false,
    "IsRegionUSWEST2": true,
    "IsStageprod": true
  },
  "Mappings": {
    "CondensedRegionNamesWithCapitalInitialLetter": {
      "us-east-1": {
        "Name": "UsEast1"
      },
      "us-west-2": {
        "Name": "UsWest2"
      }
    },
    "CondensedRegionUpperCase": {
      "us-east-1": {
        "Name": "USEAST1"
      },
      "us-west-2": {
        "Name": "USWEST2"
      }
    },
    "RedshiftAuditLoggingUserArn": {
      "us-east-1": {
        "UserArn": "arn:aws:iam::222222222222:user/logs"
      },
      "us-west-2": {
        "UserArn": "arn:aws:iam::333333333333:user/logs"
      }
    },
    "RedshiftNodeType": {
      "us-east-1": {
        "beta": "ds2.xlarge",
        "prod": "ds2.8xlarge"
      },
      "us-west-2": {
        "beta": "ds2.xlarge",
        "prod": "ds2.xlarge"
      }
    },
    "RedshiftNumberOfNodes": {
      "us-east-1": {
        "beta": 2,
        "prod": 4
      },
      "us-west-2": {
        "beta": 2,
        "prod": 8
      }
    },
    "RegionMap": {
      "us-east-1": {
        "condensedName": "useast1"
      },
      "us-west-2": {
        "condensedName": "uswest2"
      }
    },
    "StageNameWithCapitalInitialLetter": {
      "Name": {
        "beta": "Beta",
        "prod": "Prod"
      }
    }
  },
  "Outputs": {
    "StackArn": {
      "Description": "Resource ARN of the Stack",
      "Value": "MyEvaluatedFakeStackUsWest2"
    }
  },
  "Parameters": {
    "Stage": {
      "AllowedValues": [
        "beta",
        "prod"
      ],
      "Default": "beta",
      "Description": "The stage in the CFN pipeline",
      "Type": "String"
    },
    "Fruit": {
      "Default": "Bananas",
      "Description": "Favorite kind of fruit",
      "Type": "String"
    }
  },
  "Resources": {
    "AuditLogsBucket": {
      "Condition": true,
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "FooSrv/AuditLogsBucket/Resource"
      },
      "Properties": {
        "BucketEncryption": [
          {
            "ServerSideEncryptionByDefault": {
              "SSEAlgorithm": "AES256"
            }
          }
        ],
        "BucketName": "prod-uswest2-redshift-log"
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain"
    },
    "CDKMetadata": {
      "Condition": true,
      "Properties": {
        "Modules": "aws-cdk=1.15.0,@aws-cdk/assets=1.15.0,@aws-cdk/aws-cloudwatch=1.15.0,@aws-cdk/aws-ec2=1.15.0,@aws-cdk/aws-events=1.15.0,@aws-cdk/aws-iam=1.15.0,@aws-cdk/aws-kms=1.15.0,@aws-cdk/aws-lambda=1.15.0,@aws-cdk/aws-logs=1.15.0,@aws-cdk/aws-redshift=1.15.0,@aws-cdk/aws-s3=1.15.0,@aws-cdk/aws-s3-assets=1.15.0,@aws-cdk/aws-secretsmanager=1.15.0,@aws-cdk/aws-sqs=1.15.0,@aws-cdk/aws-ssm=1.15.0,@aws-cdk/core=1.15.0,@aws-cdk/cx-api=1.15.0,@aws-cdk/region-info=1.15.0,jsii-runtime=Java/1.8.0_231"
      },
      "Type": "AWS::CDK::Metadata"
    },
    "ExampleWaitHandle": {
      "Properties": {},
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "MainClusterCluster": {
      "Condition": false,
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "MainClusterSecret"
      ],
      "Metadata": {
        "aws:cdk:path": "FooSrv/RedshiftMainCluster/MainClusterCluster"
      },
      "Properties": {
        "AllowVersionUpgrade": true,
        "AutomatedSnapshotRetentionPeriod": 30,
        "ClusterParameterGroupName": "MainClusterParamGroup",
        "ClusterSubnetGroupName": "MainClusterDefaultSubnetGroup",
        "ClusterType": "multi-node",
        "DBName": "foosrv",
        "Encrypted": true,
        "LoggingProperties": {
          "BucketName": "AuditLogsBucket",
          "S3KeyPrefix": "foosrv-cluster/"
        },
        "MasterUserPassword": "{{resolve:secretsmanager:MainClusterSecret:SecretString:password::}}",
        "MasterUsername": "foosrvroot",
        "NodeType": "ds2.xlarge",
        "NumberOfNodes": 8,
        "Port": 5439,
        "PreferredMaintenanceWindow": "fri:07:00-fri:07:30",
        "PubliclyAccessible": false,
        "VpcSecurityGroupIds": [
          "FooSrvRsMainClusterSecurityGroupFakeId"
        ]
      },
      "Type": "AWS::Redshift::Cluster",
      "UpdateReplacePolicy": "Retain"
    },
    "MainClusterDefaultSubnetGroup": {
      "Condition": true,
      "Metadata": {
        "aws:cdk:path": "FooSrv/RedshiftEnvironmentMainCluster/MainClusterDefaultSubnetGroup"
      },
      "Properties": {
        "Description": "Subnet group for FooSrv",
        "SubnetIds": [ "FooSrvSubnet1FakeId", "FooSrvSubnet2FakeId"]
      },
      "Type": "AWS::Redshift::ClusterSubnetGroup"
    },
    "MainClusterParamGroup": {
      "Condition": true,
      "Metadata": {
        "aws:cdk:path": "FooSrv/RedshiftEnvironmentMainCluster/MainClusterParamGroup"
      },
      "Properties": {
        "Description": "Parameters for FooSrv Redshift MainCluster",
        "ParameterGroupFamily": "redshift-1.0",
        "Parameters": [
          {
            "ParameterName": "datestyle",
            "ParameterValue": "ISO, MDY"
          },
          {
            "ParameterName": "enable_user_activity_logging",
            "ParameterValue": "true"
          },
          {
            "ParameterName": "extra_float_digits",
            "ParameterValue": "0"
          },
          {
            "ParameterName": "require_ssl",
            "ParameterValue": "true"
          },
          {
            "ParameterName": "search_path",
            "ParameterValue": "public"
          },
          {
            "ParameterName": "statement_timeout",
            "ParameterValue": "0"
          },
          {
            "ParameterName": "use_fips_ssl",
            "ParameterValue": "false"
          },
          {
            "ParameterName": "wlm_json_configuration",
            "ParameterValue": "[{\"query_concurrency\":5}]"
          }
        ]
      },
      "Type": "AWS::Redshift::ClusterParameterGroup"
    },
    "MainClusterRole": {
      "Condition": true,
      "Metadata": {
        "aws:cdk:path": "FooSrv/RedshiftEnvironmentMainCluster/MainClusterRole/Resource"
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "redshift.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "MainClusterRoleProdUsWest2"
      },
      "Type": "AWS::IAM::Role"
    },
    "MainClusterSecret": {
      "Condition": false,
      "Metadata": {
        "aws:cdk:path": "FooSrv/MainClusterSecret/MainClusterSecretSecret/Resource"
      },
      "Properties": {
        "Description": "Master secret for FooSrv Redshift MainCluster",
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "IncludeSpace": false,
          "PasswordLength": 32,
          "SecretStringTemplate": "{\"username\": \"foosrvroot\"}"
        },
        "Name": "MainClusterSecret"
      },
      "Type": "AWS::SecretsManager::Secret"
    },
    "MainClusterWithNoSecretManagerCluster": {
      "Condition": true,
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "FooSrv/RedshiftMainClusterWithNoSecretManager/MainClusterWithNoSecretManagerCluster"
      },
      "Properties": {
        "AllowVersionUpgrade": true,
        "AutomatedSnapshotRetentionPeriod": 30,
        "ClusterParameterGroupName": "MainClusterParamGroup",
        "ClusterSubnetGroupName": "MainClusterDefaultSubnetGroup",
        "ClusterType": "multi-node",
        "DBName": "foosrv",
        "Encrypted": true,
        "LoggingProperties": {
          "BucketName": "AuditLogsBucket",
          "S3KeyPrefix": "foosrv-cluster/"
        },
        "MasterUserPassword": "{{resolve:ssm-secure:RedshiftMainClusterMasterPasswordParameter:1}}",
        "MasterUsername": "foosrvroot",
        "NodeType": "ds2.xlarge",
        "NumberOfNodes": 8,
        "Port": 5439,
        "PreferredMaintenanceWindow": "fri:07:00-fri:07:30",
        "PubliclyAccessible": false,
        "VpcSecurityGroupIds": [ "FooSrvRsMainClusterSecurityGroupFakeId" ]
      },
      "Type": "AWS::Redshift::Cluster",
      "UpdateReplacePolicy": "Retain"
    },
    "RedshiftMainClusterVPCSubnet1": {
      "Properties": {
        "AvailabilityZone": "us-west-2a",
        "CidrBlock": "10.0.0.0/20",
        "Tags": [
          {
            "Key": "Name",
            "Value": "FooSrv/RedshiftMainClusterVPC/RedshiftMainClusterVPC/RedshiftMainClusterVPCSubnet1"
          }
        ],
        "VpcId": "RedshiftMainClusterVPC"
      },
      "Type": "AWS::EC2::Subnet"
    },
    "RedshiftMainClusterVPCSubnet2": {
      "Properties": {
        "AvailabilityZone": "us-west-2b",
        "CidrBlock": "10.0.16.0/20",
        "Tags": [
          {
            "Key": "Name",
            "Value": "FooSrv/RedshiftMainClusterVPC/RedshiftMainClusterVPC/RedshiftMainClusterVPCSubnet2"
          }
        ],
        "VpcId": "RedshiftMainClusterVPC"
      },
      "Type": "AWS::EC2::Subnet"
    },
    "FooSrvAuditLogsBucketPolicy": {
      "Condition": true,
      "Metadata": {
        "aws:cdk:path": "FooSrv/AuditLogsBucket/Policy/Resource"
      },
      "Properties": {
        "Bucket": "AuditLogsBucket",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::333333333333:user/logs"
              },
              "Resource": "arn:aws:s3:::prod-uswest2-redshift-log/*"
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::333333333333:user/logs"
              },
              "Resource": "arn:aws:s3:::my-unkonwn-random-bucket"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::S3::BucketPolicy"
    },
    "FooSrvRedshiftEnvironmentMainClusterMainClusterRoleDefaultPolicy": {
      "Condition": true,
      "Metadata": {
        "aws:cdk:path": "FooSrv/RedshiftEnvironmentMainCluster/MainClusterRole/DefaultPolicy/Resource"
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::prod-uswest2-redshift-log/*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::prod-uswest2-redshift-log",
                "arn:aws:s3:::prod-uswest2-redshift-log/*"
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FooSrvRedshiftEnvironmentMainClusterMainClusterRoleDefaultPolicy",
        "Roles": [
          "MainClusterRole"
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "FooSrvQueueOldestMessageAgeHighWarningAlarm": {
      "Properties": {
        "AlarmDescription": "Example Alarm description",
        "AlarmName": "TestQueue-Prod.OldestMessageAgeHighWarning",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": "TestQueue-Prod"
          }
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ApproximateAgeOfOldestMessage",
        "Namespace": "AWS/SQS",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 600
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "FooSrvQueue": {
      "Properties": {
        "QueueName": "TestQueue-Prod"
      },
      "Type": "AWS::SQS::Queue"
    },
    "IdentityPool": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "IdentityPoolName": "my id pool name"
      }
    },
    "MyDynamoDbTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "MyDynamoDbTable-us-west-2-prod"
      }
    },
    "MyDynamoDbTable2": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "MyDynamoDbTable-2"
      }
    },
    "MyDynamoDbTable3": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "MyDynamoDbTable-Apples"
      }
    }
  }
}